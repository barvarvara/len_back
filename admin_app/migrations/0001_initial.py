# Generated by Django 4.2.7 on 2023-12-01 16:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Тип активностей',
                'verbose_name_plural': 'Типы активностей',
                'db_table': 'activity_types',
            },
        ),
        migrations.CreateModel(
            name='Certificates',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('purchase_date', models.DateField()),
                ('receiving_date', models.DateField()),
                ('cost', models.IntegerField()),
                ('cost_used', models.IntegerField()),
                ('comment', models.CharField(max_length=400)),
            ],
            options={
                'verbose_name': 'Сертификат',
                'verbose_name_plural': 'Сертификаты',
                'db_table': 'certificates',
            },
        ),
        migrations.CreateModel(
            name='Cheques',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('sum', models.IntegerField()),
                ('comment', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Счет',
                'verbose_name_plural': 'Счеты',
                'db_table': 'cheques',
            },
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Дата')),
                ('time', models.TimeField(verbose_name='Время')),
                ('next_date', models.DateField(verbose_name='Дата следующего занятия')),
                ('comment', models.CharField(max_length=500, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Занятие',
                'verbose_name_plural': 'Занятия',
                'db_table': 'classes',
            },
        ),
        migrations.CreateModel(
            name='ClassTypes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('definition', models.CharField(max_length=200)),
                ('start_cost', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Тип занятий',
                'verbose_name_plural': 'Типы занятий',
                'db_table': 'class_types',
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('fcs', models.CharField(max_length=120)),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'db_table': 'clients',
            },
        ),
        migrations.CreateModel(
            name='ClientStatuses',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('definition', models.CharField(max_length=400)),
            ],
            options={
                'verbose_name': 'Статус клиента',
                'verbose_name_plural': 'Статусы клиентов',
                'db_table': 'client_statuses',
            },
        ),
        migrations.CreateModel(
            name='ClientTypes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('definition', models.CharField(max_length=400)),
            ],
            options={
                'verbose_name': 'Тип клиента',
                'verbose_name_plural': 'Типы клиентов',
                'db_table': 'client_types',
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=40, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=40, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=40, verbose_name='Отчество')),
                ('phone', models.CharField(max_length=10, verbose_name='Номер телефона')),
                ('birthday', models.DateField(blank=True, null=True)),
                ('ban_on_spam', models.BooleanField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='admin_app.clients')),
            ],
            options={
                'verbose_name': 'Контактные данные',
                'verbose_name_plural': 'Контактные данные',
                'db_table': 'contacts',
            },
        ),
        migrations.CreateModel(
            name='ContactsTypes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Тип контактов',
                'verbose_name_plural': 'Типы контактов',
                'db_table': 'contacts_types',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('site', models.CharField(max_length=30)),
                ('is_legal', models.BooleanField()),
                ('use_phone', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Соц сети',
                'verbose_name_plural': 'Соц сети',
                'db_table': 'media',
            },
        ),
        migrations.CreateModel(
            name='PaidType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
            ],
            options={
                'verbose_name': 'Тип оплаты',
                'verbose_name_plural': 'Типы оплаты',
                'db_table': 'paid_types',
            },
        ),
        migrations.CreateModel(
            name='PhotoTypes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Тип фото',
                'verbose_name_plural': 'Типы фото',
                'db_table': 'photo_types',
            },
        ),
        migrations.CreateModel(
            name='ProductTypes',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('start_cost', models.IntegerField()),
                ('definition', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Тип изделия',
                'verbose_name_plural': 'Типы изделий',
                'db_table': 'product_types',
            },
        ),
        migrations.CreateModel(
            name='ReadyStates',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=40)),
                ('comment', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Состояние готовности',
                'verbose_name_plural': 'Состояния готовности',
                'db_table': 'ready_states',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('definition', models.CharField(max_length=400)),
                ('cost', models.IntegerField()),
                ('first_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.classes')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.producttypes')),
                ('ready_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.readystates')),
            ],
            options={
                'verbose_name': 'Изделие',
                'verbose_name_plural': 'Изделия',
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductPhotos',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('photo', models.CharField(max_length=400)),
                ('photo_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.phototypes')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.products')),
                ('product_class', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='admin_app.classes')),
            ],
            options={
                'verbose_name': 'Фото изделия',
                'verbose_name_plural': 'Фото изделий',
                'db_table': 'product_photos',
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('sum_paid', models.IntegerField()),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.certificates')),
                ('cheque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.cheques')),
                ('paid_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.paidtype')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='Guests',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.clients')),
                ('contacts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.contacts')),
                ('quest_class', models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.CASCADE, to='admin_app.classes')),
            ],
            options={
                'verbose_name': 'Гость',
                'verbose_name_plural': 'Гости',
                'db_table': 'guests',
            },
        ),
        migrations.CreateModel(
            name='ContactsMedia',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('media', models.IntegerField(db_column='media_id')),
                ('nickname', models.CharField(max_length=100)),
                ('is_main', models.BooleanField()),
                ('contacts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.contacts')),
            ],
            options={
                'verbose_name': 'Соц сети контактов',
                'verbose_name_plural': 'Соц сети контактов',
                'db_table': 'contacts_media',
            },
        ),
        migrations.AddField(
            model_name='clients',
            name='client_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.clientstatuses'),
        ),
        migrations.AddField(
            model_name='clients',
            name='client_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.clienttypes'),
        ),
        migrations.AddField(
            model_name='clients',
            name='contacts',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='admin_app.contacts'),
        ),
        migrations.AddField(
            model_name='classes',
            name='class_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.classtypes', verbose_name='Тип занятия'),
        ),
        migrations.AddField(
            model_name='cheques',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='admin_app.clients'),
        ),
        migrations.AddField(
            model_name='cheques',
            name='field_class',
            field=models.ForeignKey(db_column='class_id', on_delete=django.db.models.deletion.DO_NOTHING, to='admin_app.classes'),
        ),
        migrations.AddField(
            model_name='cheques',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='admin_app.products'),
        ),
        migrations.AddField(
            model_name='certificates',
            name='class_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.classtypes'),
        ),
        migrations.AddField(
            model_name='certificates',
            name='client_buyer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='admin_app.clients'),
        ),
        migrations.AddField(
            model_name='certificates',
            name='client_recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.clients'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('comment', models.CharField(max_length=1000)),
                ('activity_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.activitytype')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.clients')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.products')),
            ],
            options={
                'verbose_name': 'Активность',
                'verbose_name_plural': 'Активности',
                'db_table': 'activities',
            },
        ),
        migrations.CreateModel(
            name='ClientsGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_leader', models.BooleanField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='admin_app.clients')),
                ('client_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.clients')),
            ],
            options={
                'verbose_name': 'Группа клиентов',
                'verbose_name_plural': 'Группы клиентов',
                'db_table': 'clients_group',
                'unique_together': {('client_group', 'client')},
            },
        ),
        migrations.CreateModel(
            name='ClientsContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.clients')),
                ('contacts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.contacts')),
                ('contacts_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.contactstypes', verbose_name='Тип контактного лица')),
            ],
            options={
                'verbose_name': 'Контактные данные клиентов',
                'verbose_name_plural': 'Контактные данные клиентов',
                'db_table': 'clients_contacts',
                'unique_together': {('contacts', 'client')},
            },
        ),
    ]
